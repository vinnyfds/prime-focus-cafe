name: deploy

# Required Repository Variables:
#   AWS_S3_BUCKET: S3 bucket name for deployment
#   AWS_CLOUDFRONT_DIST_ID: CloudFront distribution ID for cache invalidation
#   AWS_REGION: AWS region (defaults to us-east-1)
#   AWS_OIDC_ROLE_ARN: ARN of the IAM role for OIDC authentication

on:
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

env:
  AWS_S3_BUCKET: ${{ vars.AWS_S3_BUCKET || 'MISSING_VARIABLE' }}
  AWS_CLOUDFRONT_DIST_ID: ${{ vars.AWS_CLOUDFRONT_DIST_ID || 'MISSING_VARIABLE' }}
  AWS_REGION: ${{ vars.AWS_REGION || 'us-east-1' }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      dist-path: dist
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npm run build
      - run: npm run asset:verify
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npm run build
      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_OIDC_ROLE_ARN || 'MISSING_VARIABLE' }}
          aws-region: ${{ env.AWS_REGION }}
        env:
          # Validate required variable exists
          OIDC_ROLE: ${{ vars.AWS_OIDC_ROLE_ARN }}
      - name: Ensure versioning
        run: aws s3api put-bucket-versioning --bucket "$AWS_S3_BUCKET" --versioning-configuration Status=Enabled || true
      - name: Backup current site
        run: aws s3 sync s3://$AWS_S3_BUCKET s3://$AWS_S3_BUCKET/_backups/${{ github.run_id }}-${{ github.sha }} --delete
      - name: Upload dist
        run: |
          aws s3 sync dist/ s3://$AWS_S3_BUCKET/ --delete
          aws s3 cp dist/ s3://$AWS_S3_BUCKET/ --recursive --exclude "*" --include "*.css"  --content-type "text/css"               --metadata-directive REPLACE
          aws s3 cp dist/ s3://$AWS_S3_BUCKET/ --recursive --exclude "*" --include "*.js"   --content-type "application/javascript" --metadata-directive REPLACE
          aws s3 cp dist/ s3://$AWS_S3_BUCKET/ --recursive --exclude "*" --include "*.json" --content-type "application/json"       --metadata-directive REPLACE
          aws s3 cp dist/ s3://$AWS_S3_BUCKET/ --recursive --exclude "*" --include "*.svg"  --content-type "image/svg+xml"          --metadata-directive REPLACE
          aws s3 cp dist/assets/ s3://$AWS_S3_BUCKET/assets/ --recursive --cache-control "public, max-age=31536000, immutable"
          aws s3 cp dist/index.html s3://$AWS_S3_BUCKET/index.html --cache-control "no-cache"
      - name: Invalidate CloudFront
        id: invalidate
        run: |
          aws cloudfront create-invalidation --distribution-id $AWS_CLOUDFRONT_DIST_ID --paths "/*" > invalidate.json
          cat invalidate.json
      - name: Upload deploy log artifact
        uses: actions/upload-artifact@v4
        with:
          name: deploy-log
          path: invalidate.json
